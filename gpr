#!/usr/bin/env perl
use strict;
use POSIX;
my %pts;
my $output_file = "";
my $output_format = "png";
my $set_min = -1;
my $set_max = -1;
while (<>) {
	s/\s+$//;
	(my $key, my $val) = split /:/;
	$key =~ s/^\s+(.)\s+$/\1/;
	$val =~ s/^\s+(.)\s+$/\1/;
	if ($key eq "%file") {
		$output_file = $val;
	}
	elsif ($key eq "%format") {
		$output_format = $val;
	}
	elsif ($key eq "%min") {
		$set_min = $val;
	}
	elsif ($key eq "%max") {
		$set_max = $val;
	}
	else {
		$pts{$key} = $val;
	}
}

my $len = scalar keys %pts;

if ( $output_file ne "" ) {
	print "set output \"$output_file\"\n";
}
print "set term $output_format\n";
print "set nokey\n";
print "set polar\n";
print "set angles degrees\n";
print "set grid polar 360.\n";
print "set size square\n";
print "set style data lines\n";
print "unset border\n";
print "set xrange [-1:1]\n";
print "set yrange [-1:1]\n";
print "unset xtics\n";
print "unset ytics\n";
print "set rrange [0:1]\n";

print "npoints = $len\n";


my $angle = 360 / $len;
my $mod90 = floor($angle / 90);
my $sub90 = 90 - ($mod90*$angle);
my $angle_fix = $sub90;

for (1..$len) {
	print "a$_ = $angle_fix+360/npoints*$_\n";
	print "set arrow nohead from 0,0 to first 1*cos(a$_) , 1*sin(a$_)\n"
}
my $i = 1;
my $max = -1;
foreach (sort keys %pts) {
	my $k = $_;
	my $v = $pts{$_};
	if ( $max < $v ) {
		$max = $v;
	}
	print "set label \"$k\" at cos(a$i),sin(a$i)\n";
	$i++;
}

if ( $set_max != -1 ) {
	$max = $set_max;
	foreach (sort keys %pts) {
		my $k = $_;
		my $v = $pts{$_};
		if ( $v > $max ) {
			$pts{$_} = $max;
		}
	}
}

if ( $set_min != -1 ) {
	foreach (sort keys %pts) {
		my $k = $_;
		my $v = $pts{$_};
		if ( $v < $set_min ) {
			$pts{$_} = $set_min;
		}
	}
}

print "plot '-' using ($angle_fix+\$1 * 360 / npoints):(\$2/$max) w l lc rgb \"#000000\"\n";
$i = 1;
my $first;
foreach (sort keys %pts) {
	my $k = $_;
	my $v = $pts{$_};
	if ($i == 1) { $first = $v; }
	print "$i $v\n";
	$i++;
}
print "1 $first\n";
print "\n";
